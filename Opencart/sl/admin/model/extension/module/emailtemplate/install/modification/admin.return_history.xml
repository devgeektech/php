<file path="admin/controller/mail/return.php" email_template="admin.return_history">
	<operation>
		<search index="0"><![CDATA[$mail = new Mail(]]></search>
		<add position="before"><![CDATA[
				// Prepare mail: admin.return_history
				$this->load->model('extension/module/emailtemplate');
				$this->load->model('sale/order');

				$order_info = $this->model_sale_order->getOrder($return_info['order_id']);

                $template_load = array(
                    'key' => 'admin.return_history',
                    'customer_id' => $return_info['customer_id']
                );

                if (isset($order_info['store_id'])) {
                    $template_load['store_id'] = $order_info['store_id'];
                    $template_load['payment_method'] = $order_info['payment_code'];
                    $template_load['shipping_method'] = $order_info['shipping_code'];
                }

                if (!empty($this->request->post['emailtemplate_id'])) {
                    $template_load['emailtemplate_id'] = $this->request->post['emailtemplate_id'];
                }

                if (isset($order_info['language_id'])) {
					$language_id = $order_info['language_id'];
				} elseif (!empty($return_info['customer_id'])) {
				    $this->load->model('customer/customer');

		            $customer_info = $this->model_customer_customer->getCustomer($return_info['customer_id']);

                    $language_id = $customer_info['language_id'];
				} else {
				    $language_id = $this->config->get('config_language_id');
				}

				$template_load['language_id'] = $language_id;

				$template = $this->model_extension_module_emailtemplate->load($template_load);

                if ($template) {
                    $this->load->model('localisation/language');

                    $language_info = $this->model_localisation_language->getLanguage($language_id);

                    if ($language_info) {
                        $language_code = $language_info['code'];
                    } else {
                        $language_code = $this->config->get('config_language');
                    }

                    $language = new Language($language_code);
                    $language->load($language_code);
                    $language->load('mail/return');
                    $language->load('extension/module/emailtemplate/return');

                    $template->addData($return_info);

                    if ($return_info['product_id']) {
                        $this->load->model('catalog/product');

                        $product_info = $this->model_catalog_product->getProduct($return_info['product_id']);

                        $template->addData($product_info, 'product');
                    }

                    if ($order_info) {
                        $template->addData($order_info, 'order');

                        $template->data['order_id'] = $order_info['order_id'];

                        $template->data['order_total'] = $this->currency->format($order_info['total'], $order_info['currency_code'], $order_info['currency_value']);

                        $template->data['return_link'] = $order_info['store_url'] . 'index.php?route=account/return/info&return_id=' . $return_id;
                    } else {
                        $template->data['return_link'] = HTTP_CATALOG . 'index.php?route=account/return/info&return_id=' . $return_id;
                    }

                    if (!empty($template->data['button_return_link'])) {
                        $template->data['return_link_text'] = $template->data['button_return_link'];
                    } else {
                        $template->data['return_link_text'] = $template->data['return_link'];
                    }

                    $return_reason_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "return_reason WHERE return_reason_id = '" . (int)$return_info['return_reason_id'] . "' AND language_id = '" . (int)$language_id . "'");

                    if ($return_reason_query->row) {
                        $template->data['reason'] = $return_reason_query->row['name'];
                    }

                    $return_status_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "return_status WHERE return_status_id = '" . (int)$return_info['return_status_id'] . "' AND language_id = '" . (int)$language_id . "'");

                    if ($return_status_query->row) {
                        $template->data['return_status'] = $return_status_query->row['name'];
                    }

                    $template->data['return_id'] = $return_id;

                    $template->data['date_added'] = date($language->get('date_format_short'), strtotime($return_info['date_added']));

                    $template->data['comment'] = (!empty($comment)) ? (strcmp($comment, strip_tags($html_str = html_entity_decode($comment, ENT_QUOTES, 'UTF-8'))) == 0) ? nl2br($comment) : $html_str : '';

                    $template->data['opened'] = $return_info['opened'] ? $language->get('text_yes') : $language->get('text_no');

                    $template->data['text_subject'] = sprintf($language->get('text_subject'), html_entity_decode($this->config->get('config_name'), ENT_QUOTES, 'UTF-8'), $return_id);
				    // Prepared mail: admin.return_history
                }
			]]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA[$mail->send();]]></search>
		<add position="replace"><![CDATA[
				// Send mail: admin.return_history
				if ($template && $template->check()) {
				    $template->build();
				    $template->hook($mail);

                    $mail->send();

                    $this->model_extension_module_emailtemplate->sent();
                }]]></add>
	</operation>
    <operation error="skip">
        <search><![CDATA[$mail->setHtml($this->load->view('mail/return', $data));]]></search>
        <ignoreif><![CDATA[if (empty($template)) $mail->setHtml($this->load->view('mail/return', $data));]]></ignoreif>
        <add position="replace"><![CDATA[if (empty($template)) $mail->setHtml($this->load->view('mail/return', $data));]]></add>
    </operation>
    <operation error="skip" info="Bug fix">
        <search index="0"><![CDATA[$language_info = $this->model_localisation_language->getLanguage($return_info['language_id']);]]></search>
        <ignoreif><![CDATA[$this->load->model('localisation/language');]]></ignoreif>
        <add position="before"><![CDATA[				$this->load->model('localisation/language');
        ]]></add>
    </operation>
</file>

<file path="admin/controller/sale/return.php" email_template="admin.return_history">
	<operation>
		<search index="0"><![CDATA[protected function getForm() {]]></search>
		<add position="after"><![CDATA[
				$this->document->addScript('view/javascript/summernote/summernote.js');
				$this->document->addScript('view/javascript/summernote/opencart.js');
				$this->document->addStyle('view/javascript/summernote/summernote.css');

				$this->load->model('extension/module/emailtemplate');

				$this->load->language('mail/return');
				$this->load->language('extension/module/emailtemplate/return');

				$data['entry_summary'] = $this->language->get('entry_summary');
				$data['entry_template'] = $this->language->get('entry_template');
				$data['text_select'] = $this->language->get('text_select');
				$data['warning_template_content'] = $this->language->get('warning_template_content');

				$templates = $this->model_extension_module_emailtemplate->getTemplates(array(
					'emailtemplate_key' => 'admin.return_history'
				));

				$data['template_options'] = array();

				foreach($templates as $row) {
					$data['template_options'][] = array(
						'value' => $row['emailtemplate_id'],
						'label' => $row['emailtemplate_label'] . (!empty($row['emailtemplate_default']) ? strip_tags($this->language->get('text_default')) : '')
					);
				}

				$data['user_token'] = $this->session->data['user_token'];
		]]></add>
	</operation>
	<operation>
		<search><![CDATA[$data['order_id'] = $return_info['order_id'];]]></search>
		<add position="after"><![CDATA[
				$this->load->model('sale/order');

				$order_info = $this->model_sale_order->getOrder($return_info['order_id']);

				if ($order_info) {
					$data['language_id'] = $order_info['language_id'];
					$data['store_id'] = $order_info['store_id'];
				} else {
					$data['language_id'] = $this->config->get('config_language_id');
					$data['store_id'] = 0;
				}]]></add>
	</operation>
	<operation error="skip">
		<search><![CDATA[$data['comment'] = $this->request->post['comment'];]]></search>
		<add position="replace"><![CDATA[$data['comment'] = html_entity_decode($this->request->post['comment'], ENT_QUOTES, 'UTF-8');]]></add>
	</operation>
	<operation>
		<search><![CDATA[$data['comment'] = $return_info['comment'];]]></search>
		<add position="replace"><![CDATA[$data['comment'] = html_entity_decode($return_info['comment'], ENT_QUOTES, 'UTF-8');]]></add>
	</operation>
	<operation>
		<search><![CDATA[nl2br($result['comment'])]]></search>
		<add position="replace"><![CDATA[html_entity_decode($result['comment'], ENT_QUOTES, 'UTF-8')]]></add>
	</operation>
</file>

<file path="admin/view/template/sale/return_form.twig" email_template="admin.return_history">
	<operation>
		<search index="0"><![CDATA[id="input-history-comment" class="form-control"]]></search>
		<add position="replace"><![CDATA[id="input-history-comment" class="form-control summernote" data-toggle="summernote"]]></add>
	</operation>
	<operation error="skip" info="Version conflict">
		<search index="0"><![CDATA[<input type="checkbox" name="notify" value="1" id="input-notify"/>]]></search>
		<add position="replace"><![CDATA[<input type="checkbox" name="notify" value="1" id="input-notify" />]]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA[<input type="checkbox" name="notify" value="1" id="input-notify" />]]></search>
		<add position="replace"><![CDATA[
          		  <div class="checkbox"><label><input type="checkbox" name="notify" value="1" id="input-notify" data-toggle="collapse" data-target=".form-group-notify" autocomplete="off" /></label></div>
                </div>
              </div>

              <div class="form-group form-group-notify collapse">
                <label class="col-sm-2 control-label" for="input-templates">{{ entry_template }}</label>
                <div class="col-sm-10">
                  <select id="input-templates" name="emailtemplate_id" class="form-control" autocomplete="off">
	 				<option value=''>{{ text_select }}</option>
	            	{% for item in template_options %}
	            		<option value="{{ item.value }}">{{ item.label }}</option>
	            	{% endfor %}
            	  </select>]]></add>
	</operation>
    <operation>
		<search index="0"><![CDATA[{{ footer }}]]></search>
		<add position="before"><![CDATA[
<script type="text/javascript"><!--
			(function($) {
				$(document).ready(function() {
			    	var $comment = $('#input-history-comment');

					$('select[name=emailtemplate_id]').change(function() {
						var val = $(this).val();
						var $comment = $('#input-history-comment');

						if (!val || ($comment.val() != '' && $comment.val() != '<p><br /></p>' && !confirm("{{ warning_template_content }}"))) return;

						$.ajax({
							url: 'index.php?route=extension/module/emailtemplate/fetch_template&output=comment&user_token={{ user_token }}',
							type: 'get',
							data: 'id=' + val + '&store_id={{ store_id }}' + '&language_id={{ language_id }}' + '&order_id={{ order_id }}' + '&return_id={{ return_id }}',
							dataType: 'html',
							success: function(html) {
								if (typeof CKEDITOR !== "undefined" && CKEDITOR.instances["input-history-comment"]) {
								  CKEDITOR.instances["input-history-comment"].setData(html);
								} else if ($.fn.summernote) {
                                    $comment.summernote('code', html);
                                } else {
									$comment.val(html);
								}
							},
							error: function(xhr, ajaxOptions, thrownError) {
								console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
							}
						});
					});

				});
			})(jQuery);
		//--></script>
		]]></add>
	</operation>
    <operation>
		<search index="0"><![CDATA[$('#button-history').on('click', function(e) {]]></search>
		<add position="after"><![CDATA[
	if (typeof CKEDITOR !== "undefined" && CKEDITOR.instances["input-history-comment"]) {
	  CKEDITOR.instances["input-history-comment"].updateElement();
	}

	if ($("#input-history-comment").val() == '<br />' || $("#input-history-comment").val() == '<p><br></p>') {
		$("#input-history-comment").val('');
	}
]]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA['&comment=' + encodeURIComponent($('#tab-history textarea[name=\'comment\']').val())]]></search>
		<add position="replace"><![CDATA['&comment=' + encodeURIComponent($('#input-history-comment').val()) + '&show_summary=0' + '&emailtemplate_id=' + encodeURIComponent($('select[name=\'emailtemplate_id\']').val())]]></add>
	</operation>
    <operation>
		<search index="0"><![CDATA[$('#tab-history textarea[name=\'comment\']').val('');]]></search>
		<add position="after"><![CDATA[
	  if (typeof CKEDITOR !== "undefined" && CKEDITOR.instances["input-history-comment"]) {
		CKEDITOR.instances["input-history-comment"].setData('');
	  } else if ($.fn.summernote) {
        $('#input-history-comment').summernote('reset');
      }

	  $('#input-templates').each(function(){ this.selectedIndex = this.defaultSelected });]]></add>
	</operation>
</file>

<file path="catalog/controller/account/return.php" email_template="admin.return_history">
	<operation>
		<search><![CDATA[nl2br($result['comment'])]]></search>
		<add position="replace"><![CDATA[html_entity_decode($result['comment'], ENT_QUOTES, 'UTF-8')]]></add>
	</operation>
</file>
