<file path="catalog/controller/mail/register.php" email_template="customer.register">
    <operation>
        <search index="0"><![CDATA[public function index(]]></search>
        <ignoreif><![CDATA[if ($this->request->get['route'] == 'affiliate/register') {]]></ignoreif>
        <add position="after"><![CDATA[        if ($this->request->get['route'] == 'affiliate/register') {
            return null;
        }
        ]]></add>
    </operation>
	<operation>
		<search index="0"><![CDATA[$mail = new Mail(]]></search>
		<add position="before"><![CDATA[
			// Prepare mail: customer.register
			$this->load->model('account/customer');
			$this->load->model('extension/module/emailtemplate');

			$this->load->language('extension/module/emailtemplate/customer');

			if (!empty($args[0]['customer_id'])) {
				$customer_info = $this->model_account_customer->getCustomer($args[0]['customer_id']);
			} else {
				$customer_info = $this->model_account_customer->getCustomerByEmail($args[0]['email']);
			}

			if (empty($customer_info)) {
                trigger_error('Unable to find customer by email: ' . $args[0]['email']);
                return false;
            }

			$template_load = array(
			    'key' => 'customer.register',
			    'customer_id' => $customer_info['customer_id'],
			    'customer_group_id' => $customer_info['customer_group_id'],
			    'language_id' => $customer_info['language_id'],
			    'store_id' => $customer_info['store_id']
            );

			$template = $this->model_extension_module_emailtemplate->load($template_load);

            if ($template) {
                $template->addData($args[0]);

                $template->addData($customer_info, 'customer');

                $template->data['newsletter'] = $this->language->get((isset($args[0]['newsletter']) && $args[0]['newsletter'] == 1) ? 'text_yes' : 'text_no');

                $template->data['account_login'] = $this->url->link('account/login');

                if (!empty($template->data['button_account_login'])) {
                    $template->data['account_login_text'] = $template->data['button_account_login'];
                } else {
                    $template->data['account_login_text'] = $template->data['account_login'];
                }

                if (!empty($args[0]['custom_field'])) {
                    $this->load->model('account/custom_field');

                    $custom_fields = $this->model_account_custom_field->getCustomFields($customer_group_id);

                    foreach ($custom_fields as $custom_field) {
                        if (isset($args[0]['custom_field'][$custom_field['location']][$custom_field['custom_field_id']])) {
                            $custom_field_key = 'custom_field_' . ($custom_field['location'] != 'account' ? $custom_field['location'] . '_' : '') . $custom_field['custom_field_id'];
                            $custom_field_value = $args[0]['custom_field'][$custom_field['location']][$custom_field['custom_field_id']];

                            $template->data[$custom_field_key . '_name'] = $custom_field['name'];
                            $template->data[$custom_field_key . '_value'] = '';

                            if ($custom_field['custom_field_value']) {
                                foreach ($custom_field['custom_field_value'] as $custom_field_value_info) {
                                    if (is_array($custom_field_value)) {
                                        if (in_array($custom_field_value_info['custom_field_value_id'], $custom_field_value)) {
                                            $template->data[$custom_field_key . '_value_' . $custom_field_value_info['custom_field_value_id']] = $custom_field_value_info['name'];
                                        }
                                    } else {
                                        if ($custom_field_value_info['custom_field_value_id'] == $custom_field_value) {
                                            $template->data[$custom_field_key . '_value'] = $custom_field_value_info['name'];
                                        }
                                    }
                                }
                            } else {
                                $template->data[$custom_field_key . '_value'] = $custom_field_value;
                            }
                        }
                    }
                }

                $template->data['customer_group'] = $customer_group_info['name'];

                if ($customer_group_info['approval']) {
                    $template->data['customer_text'] = $this->language->get('text_approval');
                } else {
                    $template->data['customer_text'] = $this->language->get('text_login');
                }

                if (!empty($customer_info['address_id'])) {
                    $this->load->model('account/address');

                    $address = $this->model_account_address->getAddress($customer_info['address_id']);

                    if ($address) {
                        $country = '';
                        $iso_code_2 = '';
                        $iso_code_3 = '';
                        $address_format = '';
                        $zone = '';
                        $zone_code = '';

                        if (!empty($address['country_id'])) {
                            $this->load->model('localisation/country');

                            $country_info = $this->model_localisation_country->getCountry($address['country_id']);

                            if ($country_info) {
                                $country = $country_info['name'];
                                $iso_code_2 = $country_info['iso_code_2'];
                                $iso_code_3 = $country_info['iso_code_3'];
                                $address_format = $country_info['address_format'];
                            }
                        }

                        if (!empty($address['zone_id'])) {
                            $this->load->model('localisation/zone');

                            $zone_info = $this->model_localisation_zone->getZone($address['zone_id']);

                            if ($zone_info) {
                                $zone = $zone_info['name'];
                                $zone_code = $zone_info['code'];
                            }
                        }

                        $address_data = array(
                            'address_id'     => $customer_info['address_id'],
                            'firstname'      => $address['firstname'],
                            'lastname'       => $address['lastname'],
                            'company'        => $address['company'],
                            'address_1'      => $address['address_1'],
                            'address_2'      => $address['address_2'],
                            'postcode'       => $address['postcode'],
                            'city'           => $address['city'],
                            'zone_id'        => $address['zone_id'],
                            'zone'           => $zone,
                            'zone_code'      => $zone_code,
                            'country_id'     => $address['country_id'],
                            'country'        => $country,
                            'iso_code_2'     => $iso_code_2,
                            'iso_code_3'     => $iso_code_3
                        );

                        $find = array();
                        $replace = array();

                        foreach(array_keys($address_data) as $key) {
                            $find[$key] = '{'.$key.'}';
                            $replace[$key] =  $address_data[$key];
                        }

                        if (isset($address['custom_field']) && is_array($address['custom_field'])) {
                            foreach ($address['custom_field'] as $custom_field_id => $custom_field) {
                                $find[] = '{custom_field_' . $custom_field_id . '}';
                                $replace[] = isset($custom_field['value']) ? $custom_field['value'] : '';
                            }
                        }

                        if (!$address_format) {
                            $address_format = '{firstname} {lastname}' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city} {postcode}' . "\n" . '{zone}' . "\n" . '{country}';
                        }

                        $template->data['address'] = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $address_format))));
                        $template->data['address_zone'] = $zone;
                        $template->data['address_country'] = $country;
                    }
                }
			    // Prepared mail: customer.register
			}
	]]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA[$mail->send();]]></search>
		<add position="replace"><![CDATA[// Send mail: customer.register
			if ($template && $template->check()) {
			    $template->build();
			    $template->hook($mail);

                $mail->send();

                $this->model_extension_module_emailtemplate->sent();
            }]]></add>
	</operation>
    <operation error="skip">
        <search><![CDATA[$mail->setHtml($this->load->view('mail/register', $data));]]></search>
        <ignoreif><![CDATA[if (empty($template)) $mail->setHtml($this->load->view('mail/register', $data));]]></ignoreif>
        <add position="replace"><![CDATA[if (empty($template)) $mail->setHtml($this->load->view('mail/register', $data));]]></add>
    </operation>
</file>
