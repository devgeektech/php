<file path="catalog/controller/mail/order.php" email_template="order.update">
	<operation>
		<search index="1"><![CDATA[$mail = new Mail(]]></search>
		<add position="after"><![CDATA[
		// Prepare mail: order.update
		$this->load->model('extension/module/emailtemplate');

		$language->load('extension/module/emailtemplate/order');

		$template_load = array(
			'key' => 'order.update',
			'customer_id' => $order_info['customer_id'],
            'customer_group_id' => $order_info['customer_group_id'],
            'language_id' => $order_info['language_id'],
            'order_status_id' => $order_status_id,
            'store_id' => $order_info['store_id'],
            'payment_method' => $order_info['payment_code'],
            'shipping_method' => $order_info['shipping_code']
		);

		if (!empty($this->request->post['emailtemplate_id'])) {
			$template_load['emailtemplate_id'] = $this->request->post['emailtemplate_id'];
		}

		$template_filter = array();

		if (!empty($order_info['customer_id']) && !isset($total_customer_orders)) {
			$total_customer_orders_query = $this->db->query("SELECT count(1) as total FROM `" . DB_PREFIX . "order` WHERE customer_id = '" . (int)$order_info['customer_id'] . "'");

			if ($total_customer_orders_query->row) {
				$total_customer_orders = $total_customer_orders_query->row['total'];
				$template_filter['total_customer_orders'] = $total_customer_orders;
			}
		}

		$template = $this->model_extension_module_emailtemplate->load($template_load, $template_filter);

        if ($template) {
            $template->addData($order_info);

            if (!empty($data)) $template->addData($data);

            if (!empty($order_info['customer_group_id'])) {
                $this->load->model('account/customer_group');

                $customer_group = $this->model_account_customer_group->getCustomerGroup($order_info['customer_group_id']);

                $template->data['customer_group'] = array(
                    'name' => $customer_group['name'],
                    'description' => $customer_group['description']
                );
            }

            if (!empty($order_info['affiliate_id']) && file_exists(DIR_APPLICATION . 'model/account/affiliate.php')) {
                $this->load->model('account/affiliate');

                $template->data['affiliate'] = $this->model_account_affiliate->getAffiliate($order_info['affiliate_id']);
            }

            $template->data['order_status'] = $data['order_status'];

            $template->data['order_status_id'] = $order_status_id;

            $template->data['total_customer_orders'] = isset($total_customer_orders) ? $total_customer_orders : 0;

            $template->data['date_added'] = date($this->language->get('date_format_short'), strtotime($order_info['date_added']));

            $template->data['date_modified'] = date($this->language->get('date_format_short'), strtotime($order_info['date_modified']));

            if ($order_info['invoice_no']) {
                $template->data['invoice_no'] = $order_info['invoice_prefix'] . $order_info['invoice_no'];
            } else {
                $template->data['invoice_no'] = '';
            }

            if ($order_info['order_status_id'] != $order_status_id){
                $template->data['prev_order_status_id'] = $order_info['order_status_id'];
            }

            $template->data['order_total'] = $this->currency->format($order_info['total'], $order_info['currency_code'], $order_info['currency_value']);

            $comment = html_entity_decode($comment, ENT_QUOTES, 'UTF-8');

            $template->data['comment'] = (trim(strip_tags($comment)) != '') ? $comment : '';

            if ($order_info['comment']) {
                $template->data['order_comment'] = nl2br($order_info['comment']);
            }

            if ($order_info['comment'] != $comment) {
                $template->data['instruction'] = nl2br($comment);
            } else {
                $template->data['instruction'] = '';
            }

            if ($order_info['customer_id']) {
                $template->data['order_link'] = $order_info['store_url'] . 'index.php?route=account/order/info&order_id=' . $order_info['order_id'];

                if (!empty($template->data['button_order_link'])) {
                    $template->data['order_link_text'] = $template->data['button_order_link'];
                } else {
                    $template->data['order_link_text'] = $template->data['order_link'];
                }
            }

            // Custom fields
            if (!empty($order_info['custom_field']) || !empty($order_info['payment_custom_field'])) {
                $this->load->model('account/custom_field');

				// Cleanup
				foreach(array('custom_field', 'payment_custom_field', 'shipping_custom_field') as $var) {
					if (isset($template->data[$var])) {
						unset($template->data[$var]);
					}
				}

                if (!empty($order_info['customer_group_id'])) {
                    $customer_group_id = $order_info['customer_group_id'];
                } else {
                    $customer_group_id = $this->config->get('config_customer_group_id');
                }

                $custom_fields = $this->model_account_custom_field->getCustomFields($customer_group_id);

                foreach ($custom_fields as $custom_field) {
                    if (isset($order_info['payment_custom_field'][$custom_field['custom_field_id']])) {
                        $template->data['custom_field_' . $custom_field['custom_field_id'] . '_name'] = $custom_field['name'];

                        if ($custom_field['custom_field_value']) {
                            foreach ($custom_field['custom_field_value'] as $custom_field_value) {
                                if (is_array($order_info['payment_custom_field'][$custom_field['custom_field_id']])) {
                                    if (in_array($custom_field_value['custom_field_value_id'], $order_info['payment_custom_field'][$custom_field['custom_field_id']])) {
                                        $template->data['custom_field_' . $custom_field['custom_field_id'] . '_value_' . $custom_field_value['custom_field_value_id']] = $custom_field_value['name'];
                                    }
                                } else {
                                    if ($custom_field_value['custom_field_value_id'] == $order_info['payment_custom_field'][$custom_field['custom_field_id']]) {
                                        $template->data['custom_field_' . $custom_field['custom_field_id'] . '_value'] = $custom_field_value['name'];
                                    }
                                }
                            }
                        } else {
                            $template->data['custom_field_' . $custom_field['custom_field_id'] . '_value'] = $order_info['payment_custom_field'][$custom_field['custom_field_id']];
                        }
                    } elseif (isset($order_info['custom_field'][$custom_field['custom_field_id']])) {
                        $template->data['custom_field_' . $custom_field['custom_field_id'] . '_name'] = $custom_field['name'];

                        if ($custom_field['custom_field_value']) {
                            foreach ($custom_field['custom_field_value'] as $custom_field_value) {
                                if (is_array($order_info['custom_field'][$custom_field['custom_field_id']])) {
                                    if (in_array($custom_field_value['custom_field_value_id'], $order_info['custom_field'][$custom_field['custom_field_id']])) {
                                        $template->data['custom_field_' . $custom_field['custom_field_id'] . '_value_' . $custom_field_value['custom_field_value_id']] = $custom_field_value['name'];
                                    }
                                } else {
                                    if ($custom_field_value['custom_field_value_id'] == $order_info['custom_field'][$custom_field['custom_field_id']]) {
                                        $template->data['custom_field_' . $custom_field['custom_field_id'] . '_value'] = $custom_field_value['name'];
                                    }
                                }
                            }
                        } else {
                            $template->data['custom_field_' . $custom_field['custom_field_id'] . '_value'] = $order_info['custom_field'][$custom_field['custom_field_id']];
                        }
                    }
                }
            }

			// Address
            foreach(array('payment', 'shipping') as $var) {
                if ($order_info[$var . '_address_format']) {
                    $format = $order_info[$var . '_address_format'];
                } else {
                    $format = '{firstname} {lastname}' . "\n" . '{company}' . "\n" . '{address_1}' . "\n" . '{address_2}' . "\n" . '{city} {postcode}' . "\n" . '{zone}' . "\n" . '{country}';
                }

                $find = array(
                    '{firstname}',
                    '{lastname}',
                    '{company}',
                    '{address_1}',
                    '{address_2}',
                    '{city}',
                    '{postcode}',
                    '{zone}',
                    '{zone_code}',
                    '{country}'
                );

                $replace = array(
                    'firstname' => $order_info[$var . '_firstname'],
                    'lastname'  => $order_info[$var . '_lastname'],
                    'company'   => $order_info[$var . '_company'],
                    'address_1' => $order_info[$var . '_address_1'],
                    'address_2' => $order_info[$var . '_address_2'],
                    'city'      => $order_info[$var . '_city'],
                    'postcode'  => $order_info[$var . '_postcode'],
                    'zone'      => $order_info[$var . '_zone'],
                    'zone_code' => $order_info[$var . '_zone_code'],
                    'country'   => $order_info[$var . '_country']
                );

                if (isset($order_info['custom_field'])) {
                    foreach ($order_info['custom_field'] as $custom_field_id => $custom_field) {
                        $find[] = '{custom_field_' . $custom_field_id . '}';
                        $replace[] = isset($custom_field['value']) ? $custom_field['value'] : '';
                    }
                }

                if (isset($order_info[$var . '_custom_field'])) {
                    foreach ($order_info[$var . '_custom_field'] as $custom_field_id => $custom_field) {
                        $find[] = '{custom_field_' . $custom_field_id . '}';
                        $replace[] = isset($custom_field['value']) ? $custom_field['value'] : $custom_field;
                    }
                }

                $template->data[$var . '_address'] = str_replace(array("\r\n", "\r", "\n"), '<br />', preg_replace(array("/\s\s+/", "/\r\r+/", "/\n\n+/"), '<br />', trim(str_replace($find, $replace, $format))));
            }

		    // Prepared mail: order.update
        }
		]]></add>
	</operation>
	<operation>
		<search index="1"><![CDATA[$mail->send();]]></search>
        <ignoreif><![CDATA[// Send mail: order.update]]></ignoreif>
		<add position="replace"><![CDATA[// Send mail: order.update
		if ($template && $template->check()) {
		    $template->build();
		    $template->hook($mail);
        }

		$mail->send();

		$this->model_extension_module_emailtemplate->sent();]]></add>
	</operation>
    <operation error="skip">
        <search><![CDATA[$mail->setHtml($this->load->view('mail/order_edit', $data));]]></search>
        <ignoreif><![CDATA[if (empty($template)) $mail->setHtml($this->load->view('mail/order_edit', $data));]]></ignoreif>
        <add position="replace"><![CDATA[if (empty($template)) $mail->setHtml($this->load->view('mail/order_edit', $data));]]></add>
    </operation>
</file>

<file path="admin/controller/sale/order.php" email_template="order.update">
	<operation>
		<search index="0"><![CDATA[$data['text_ip_add'] = ]]></search>
		<add position="before"><![CDATA[
		$this->load->language('extension/module/emailtemplate/order');

		$data['user_token'] = $this->session->data['user_token'];

		$data['entry_template'] = $this->language->get('entry_template');
		$data['entry_order_summary'] = $this->language->get('entry_order_summary');

		$data['text_select'] = $this->language->get('text_select');

		$data['warning_template_content'] = $this->language->get('warning_template_content');

		$data['language_id'] = $order_info['language_id'];
		$data['store_id'] = $order_info['store_id'];

		$this->load->model('localisation/language');
		$this->load->model('extension/module/emailtemplate');

		$templates = $this->model_extension_module_emailtemplate->getTemplates(array(
			'emailtemplate_key' => 'order.update',
			'sort' => 'default',
			'order' => 'ASC'
		));

		$data['template_options'] = array();

		// Select most appropriate template matching most conditions
			$keys = array(
			'store_id' => $order_info['store_id'],
			'language_id' => $order_info['language_id'],
			'customer_group_id' => $order_info['customer_group_id'],
			'order_status_id' => $order_info['order_status_id'],
			'payment_method' => $order_info['payment_code'],
			'shipping_method' => $order_info['shipping_code'],
		);

		// Give all templates a 'power'
		$i = 0;
		foreach ($templates as $template) {
			$i++;
			$data['template_options'][$i] = array(
				'value' => $template['emailtemplate_id'],
				'label' => $template['emailtemplate_label'] . (!empty($template['emailtemplate_default']) ? ' (' . strip_tags($this->language->get('text_default')) . ')': ''),
				'order_status_id' => $template['order_status_id'],
				'selected' => false,
				'power' => 0,
			);

			foreach ($keys as $_key => $_value) {
				$data['template_options'][$i]['power'] = $data['template_options'][$i]['power'] << 1;

				if (isset($template[$_key]) && $template[$_key] !== '' && $template[$_key] == $_value) {
					$data['template_options'][$i]['power'] += 1;
				}
			}
		}

		// Select template with max 'power'
		if (count($data['template_options']) > 1) {
			$templates_option_power = 0;

			foreach ($data['template_options'] as $i => $templates_option) {
				if ($templates_option['power'] > $templates_option_power) {
					$templates_option_selected = $i;
				}
				unset($data['template_options'][$i]['power']);
			}

			if (isset($templates_option_selected)) {
				$data['template_options'][$templates_option_selected]['selected'] = true;
			}
		}

		$this->document->addScript('view/javascript/summernote/summernote.js');
		$this->document->addScript('view/javascript/summernote/opencart.js');
		$this->document->addStyle('view/javascript/summernote/summernote.css');
]]></add>
	</operation>
	<operation error="skip">
		<search><![CDATA[nl2br($result['comment'])]]></search>
		<add position="replace"><![CDATA[html_entity_decode($result['comment'], ENT_QUOTES, 'UTF-8')]]></add>
	</operation>
    <operation error="skip">
        <search><![CDATA[nl2br($order_info['comment'])]]></search>
        <add position="replace"><![CDATA[html_entity_decode($order_info['comment'], ENT_QUOTES, 'UTF-8')]]></add>
    </operation>
	<operation>
		<search><![CDATA[$data['vouchers'][] = array(]]></search>
		<add position="after"><![CDATA[					'voucher_id'  => $voucher['voucher_id'],]]></add>
	</operation>
</file>

<file path="admin/view/template/sale/order_info.twig" email_template="order.update">
    <operation>
        <search index="0"><![CDATA[id="input-comment" class="form-control]]></search>
        <add position="replace"><![CDATA[data-toggle="summernote" id="input-comment" class="form-control summernote]]></add>
    </operation>
	<operation>
		<search index="0"><![CDATA[id="input-notify"]]></search>
		<add position="after"><![CDATA[                    </div>
                  </div>
                </div>
                <div class="form-group form-group-notify" style="display:none">
                  <label class="col-sm-2 control-label" for="input-templates">{{ entry_template }}</label>
                  <div class="col-sm-10">
                    <select id="input-templates" name="emailtemplate_id" class="form-control">
                      <option value="">{{ text_select }}</option>
                      {% for item in template_options %}
                        <option value="{{ item.value }}" data-order-status="{{ item.order_status_id }}"{{ (item.selected or template_options|length == 1) ? ' selected="selected"' }}>{{ item.label }}</option>
                      {% endfor %}
                    </select>
                  </div>
                </div>

                <div class="form-group form-group-notify" style="display:none">
                  <label class="col-sm-2 control-label" for="input-order-summary">{{ entry_order_summary }}</label>
                  <div class="col-sm-10">
                      <div class="btn-group btn-group-toggle" data-toggle="buttons">
                        <label class="btn btn-default">
                          <input type="radio" name="order_summary" value="1"> {{ text_yes }}
                        </label>
                        <label class="btn btn-default">
                          <input type="radio" name="order_summary" value="0"> {{ text_no }}
                        </label>
                      </div>

                      <div class="form-group-order-summary" style="display:none">
                        <hr />
                        {% for product in products %}
                        <div class="checkbox"><label>
                            <input type="checkbox" name="order_summary_products[]" value="{{ product.product_id }}" checked="checked" />
                            {{ product.name }}
                            {% for option in product.option %}
                            <br />
                            {% if option.type != 'file' %}
                            &nbsp;<small> - {{ option.name }}: {{ option.value }}</small>
                            {% else %}
                            &nbsp;<small> - {{ option.name }}: <a href="{{ option.href }}">{{ option.value }}</a></small>
                            {% endif %}
                            {% endfor %}
                          </label></div>
                        {% endfor %}
                        {% for voucher in vouchers %}
                        <div class="checkbox"><label>
                            <input type="checkbox" name="order_summary_vouchers[]" value="{{ voucher.voucher_id }}" checked="checked" />
                            {{ voucher.description }}
                          </label>
                        </div>
                        {% endfor %}
                      ]]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA[$('#button-history').on('click', function() {]]></search>
		<add position="after"><![CDATA[  if (typeof CKEDITOR !== "undefined" && (CKEDITOR.instances["input-comment"] || CKEDITOR.instances["comment"])) {
  	  if (CKEDITOR.instances["input-comment"]) {
		  CKEDITOR.instances["input-comment"].updateElement();
	  } else {
		  CKEDITOR.instances["comment"].updateElement();
	  }
  }

  if ($("textarea[name='comment']").val().replace(/(<([^>]+)>)/ig,"") == '') {
    $("textarea[name='comment']").val('');
  }]]></add>
	</operation>
	<operation>
		<search><![CDATA['&comment=' +]]></search>
		<add position="replace"><![CDATA[($('input[name=\'order_summary\']:checked').length ? ('&order_summary=' + $('input[name=\'order_summary\']:checked').val()) : '') + ('&order_summary_products=' + $('input[name=\'order_summary_products[]\']:checked').map(function() { return $(this).val(); }).toArray()) + ('&order_summary_vouchers=' + $('input[name=\'order_summary_vouchers[]\']:checked').map(function() { return $(this).val(); }).toArray()) + '&emailtemplate_id=' + encodeURIComponent($('select[name=\'emailtemplate_id\']').val()) + '&comment=' +]]></add>
	</operation>
	<operation>
		<search><![CDATA[$('textarea[name=\'comment\']').val('');]]></search>
		<add position="after"><![CDATA[
			if (typeof CKEDITOR !== "undefined" && (CKEDITOR.instances["input-comment"] || CKEDITOR.instances["comment"])) {
			  if (CKEDITOR.instances["input-comment"]) {
				  CKEDITOR.instances["input-comment"].setData('');
			  } else {
				  CKEDITOR.instances["comment"].setData('');
			  }
	        } else if ($.fn.summernote) {
				$('textarea[name=\'comment\']').summernote('reset');
			}

			$('input[name=notify]').prop('checked', false).parent().removeClass('active');
			$('input[name=notify][value="0"]').parent().addClass('active');

			$('.form-group-notify').hide().each(function(){
              $(this).find('input[type=radio][value!="0"]').prop('checked', false).parent().removeClass('active');
			  $(this).find('input[type=radio][value="0"]').prop('checked', true).change().parent().addClass('active');
			});
		]]></add>
	</operation>
	<operation>
		<search index="0"><![CDATA[{{ footer }}]]></search>
		<add position="before"><![CDATA[
<script type="text/javascript"><!--
(function($){
  $(document).ready(function(){
    var $comment = $('textarea[name=comment]');

    function fetchTemplateComment(id, callback) {
    	if (!id) return false;

		if (typeof CKEDITOR !== "undefined" && (CKEDITOR.instances["input-comment"] || CKEDITOR.instances["comment"])) {
			var editorName = CKEDITOR.instances["input-comment"] ? 'input-comment' : 'comment';
			CKEDITOR.instances[editorName].setData('');
			CKEDITOR.instances[editorName].setReadOnly(true);
		} else if ($.fn.summernote) {
			$comment.summernote('code', '');
			$comment.summernote('disable');
		} else {
			$comment.val('');
		}

        $.ajax({
            url: 'index.php?route=extension/module/emailtemplate/fetch_template&output=comment&user_token={{ user_token }}',
            type: 'get',
            data: 'emailtemplate_id=' + id + '&store_id={{ store_id }}' + '&language_id={{ language_id }}' + '&order_id={{ order_id }}',
            dataType: 'html',
            success: function(html) {
                if (html) {
                    $comment.val(html);

					if (typeof CKEDITOR !== "undefined" && (CKEDITOR.instances["input-comment"] || CKEDITOR.instances["comment"])) {
						var editorName = CKEDITOR.instances["input-comment"] ? 'input-comment' : 'comment';
						CKEDITOR.instances[editorName].setData(html);
						CKEDITOR.instances[editorName].setReadOnly(false);
					} else if ($.fn.summernote) {
						$comment.summernote('code', html);
						$comment.summernote('enable');
					}

                    if (callback) callback();
                }
            },
            error: function(xhr, ajaxOptions, thrownError) {
                console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
            }
        })
    }

    var $notify_group = $('.form-group-notify');
	var $notify_checkbox = $('#input-notify');
    var $order_status = $('#input-order-status');
    var $template_options = $('#input-templates');

    $notify_checkbox.on('change', function(){
      if ($notify_checkbox.is(':checked')) {
        $notify_group.show();

        if ($order_status.val()) {
          $order_status.trigger('change');
        }
      } else {
        $notify_group.hide();
      }
    });

    $order_status.on('change', function(){
      var $template_option = $template_options.find('option[data-order-status="' + $order_status.val() + '"]:eq(0)');
      // Select default template
      if ($template_option.length == 0) {
        $template_option = $template_options.find(':nth-child(2)');
      }

      var emailtemplate_id = $template_option.val()

      if ($notify_checkbox.is(':checked')) {
        fetchTemplateComment(emailtemplate_id, function () {
          $template_option.prop('selected', true);
        });
      } else {
        $template_options.val('');
      }
    });

    $('input[name=order_summary]').on('change', function(){
      $('.form-group-order-summary').toggle($(this).val() == 1 ? true : false);
    });

    $template_options.on('change', function() {
        var id = $(this).val();
        if (!id) {
          $comment.val('')
        } else {
          if ($comment.val() != '' && $comment.val() != '<p><br></p>' && !confirm("{{ warning_template_content }}")) {
            $(this).val($.data(this, 'current'));
            return false;
          }
          $.data(this, 'current', $(this).val());
          fetchTemplateComment(id);
        }
    });
  });
})(jQuery);
//--></script>]]></add>
	</operation>
</file>
